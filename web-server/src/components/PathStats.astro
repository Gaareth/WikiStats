---
import { NUM_PAGES_LOADED_STAT, NUM_ROOT_PAGES_STAT } from "../db/constants";
import sp_stats from "../db/sp-stats.json";
import { big_num_format } from "../utils";
import PathHistogram from "./PathHistogram";
import Stat from "./Stat";

export type PathStat = {
    longest_path: string[];
    num_visited: number;
    depth_histogram: {
        [key: string]: number;
    };
};

interface Props {
    wiki_name: string;
    dump_date: string;
    page_title: string;
}

const { wiki_name, dump_date, page_title } = Astro.props;
// prettier-ignore
//@ts-ignore
const data: PathStat | undefined = sp_stats[wiki_name as keyof typeof sp_stats][page_title as keyof (typeof sp_stats)["jawiki"]];
const reachable_pages =
    (await NUM_PAGES_LOADED_STAT.get(dump_date, wiki_name)) -
    (await NUM_ROOT_PAGES_STAT.get(dump_date, wiki_name));

let num_not_reached = 0;
if (data !== undefined) {
    num_not_reached = reachable_pages - data.num_visited;
}
// const longest_path = await path_from_titles(data.longest_path, wiki_name);
//  {data.longest_path.length > 0 && (
//   <div>
//     <h3 class="text-2xl">The longest shortest path</h3>
//     <ShortestPath
//       start={page_title}
//       end={data.longest_path.at(-1)!}
//       path={longest_path}
//       {wiki_name}
//     />
//   </div>
// )}
---

<section class="my-20">
    <h2 class="text-3xl">Stats</h2>

    {
        data !== undefined ? (
            <>
                <p class="text-secondary text-base">
                    Stats while doing a
                    <a href="https://en.wikipedia.org/wiki/Breadth-first_search">
                        Breadth-first search (BFS)
                    </a>
                    starting from {page_title}
                </p>
                <div class="flex flex-col gap-5 mt-2">
                    <div class="grid grid-cols-2 grid-rows-2 gap-1">
                        <Stat
                            title="Pages visited"
                            value={big_num_format(data.num_visited)}
                            className="px-1 py-1 sm:px-5 sm:py-3"
                        />

                        <Stat
                            title="Pages not reached"
                            value={big_num_format(num_not_reached)}
                            className="px-1 py-1 sm:px-5 sm:py-3"
                        />
                        <Stat
                            title="Longest shortest path"
                            value={big_num_format(data.longest_path.length)}
                            className="col-span-2 sm:col-span-1 px-1 py-1 sm:px-5 sm:py-3"
                        />
                    </div>
                    <PathHistogram
                        client:load
                        depth_histogram={data.depth_histogram}
                    />
                </div>
            </>
        ) : (
            <p class="text-base text-neutral-500">No Stats saved</p>
        )
    }
</section>
