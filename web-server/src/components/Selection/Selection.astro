---
import clsx from "clsx";
import { cn } from "../../utils";
import SelectionSearch from "./SelectionSearch";

export interface SelectionProps {
    className?: string;
    classNameWrapper?: string;
    classNameLegend?: string;
    vertical?: boolean;
    max_shown?: number;
}

interface Props extends SelectionProps {
    currrent_item: string | undefined;
    items: string[];
    what: string;
    get_url: (item: string) => string;
}

const {
    get_url,
    currrent_item,
    items,
    what,
    classNameWrapper,
    className,
    classNameLegend,
    vertical = false,
    max_shown = 11,
} = Astro.props;
---

<fieldset
    class={clsx(
        "dark:bg-dark_01 dark:border-dark_05 border flex gap-2 justify-between px-4 pb-2.5",
        currrent_item === undefined && "bg-slate-50",
        "flex flex-col-reverse sm:flex-row",
        classNameWrapper,
    )}>
    <legend class={cn("text-base text-secondary", classNameLegend)}>
        All {what} ({items.length})
    </legend>

    <div
        class={clsx("grid gap-4 sm:flex flex-wrap sm:gap-2", className)}
        style="grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));">
        {
            items.slice(0, max_shown).map((item, i) => (
                <a
                    href={get_url(item)}
                    class={item == currrent_item ? "font-bold" : "font-normal"}>
                    {item}
                    {!vertical && i < items.length - 1 && (
                        <span class="hidden sm:inline">|</span>
                    )}
                </a>
            ))
        }
        <slot name="global" />

        {
            items.length > max_shown && (
                <div class="col-span-2">
                    {/* <span class="text-secondary">...</span> */}
                    <SelectionSearch
                        items={items.map((item) => ({
                            name: item,
                            url: get_url(item),
                        }))}
                        client:load
                    />
                </div>
            )
        }
        <!-- astro should warn that i want to pass a function and use client laod -->
    </div>
</fieldset>
